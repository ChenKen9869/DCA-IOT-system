basePath: /
definitions:
  server.SuccessResponse200:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      msg:
        example: success
        type: string
    type: object
host: localhost:5930
info:
  contact:
    email: 972576519@qq.com
    name: aken
    url: https://github.com/ChenKen9869
  description: golang-backend interface
  license:
    name: license(Mandatory)
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Intelligent Pasture Backend APIs
  version: version(1.0)
paths:
  /biology/create:
    post:
      consumes:
      - multipart/form-data
      description: create biology
      parameters:
      - description: biology name
        in: formData
        name: BiologyName
        required: true
        type: string
      - description: biology type
        in: formData
        name: BiologyType
        required: true
        type: string
      - description: company id(farmhouse id)
        in: formData
        name: CompanyId
        required: true
        type: string
      - description: biology birthday
        in: formData
        name: Birthday
        required: true
        type: string
      - description: biology gender
        in: formData
        name: Gender
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/create_epidemic_prevention_record:
    post:
      consumes:
      - multipart/form-data
      description: create biology epidemic prevention record
      parameters:
      - description: biology id
        in: formData
        name: BiologyId
        required: true
        type: integer
      - description: vaccine description
        in: formData
        name: VaccineDescription
        required: true
        type: string
      - description: inoculation time
        in: formData
        name: InoculationTime
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/create_medical_record:
    post:
      consumes:
      - multipart/form-data
      description: create biology medical record
      parameters:
      - description: biology id
        in: formData
        name: BiologyId
        required: true
        type: integer
      - description: disease
        in: formData
        name: Disease
        required: true
        type: string
      - description: illness time
        in: formData
        name: IllnessTime
        required: true
        type: string
      - description: treatment plan
        in: formData
        name: TreatmentPlan
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/create_operation_record:
    post:
      consumes:
      - multipart/form-data
      description: create biology operation record
      parameters:
      - description: biology id
        in: formData
        name: BiologyId
        required: true
        type: integer
      - description: doctor
        in: formData
        name: Doctor
        required: true
        type: string
      - description: operation time
        in: formData
        name: OperationTime
        required: true
        type: string
      - description: process description
        in: formData
        name: ProcessDescription
        required: true
        type: string
      - description: result
        in: formData
        name: Result
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/create_type:
    post:
      consumes:
      - multipart/form-data
      description: create biology type
      parameters:
      - description: type name
        in: formData
        name: BiologyTypeId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/delete:
    delete:
      consumes:
      - application/json
      description: delete biology
      parameters:
      - description: name of operator
        in: query
        name: Operator
        required: true
        type: string
      - description: telephone number of operator
        in: query
        name: TelephoneNumber
        required: true
        type: string
      - description: leave place
        in: query
        name: LeavePlace
        required: true
        type: string
      - description: id
        in: query
        name: Id
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/delete_type:
    delete:
      consumes:
      - application/json
      description: delete biology type
      parameters:
      - description: type name
        in: query
        name: BiologyTypeId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_auth_list:
    get:
      consumes:
      - application/json
      description: get user's auth biology list
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_epidemic_prevention_record_list:
    get:
      consumes:
      - application/json
      description: get epidemic prevention record list of biology
      parameters:
      - description: biology id
        in: query
        name: BiologyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_gender_statistic:
    get:
      consumes:
      - application/json
      description: get biology gender statistic
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_info:
    get:
      consumes:
      - application/json
      description: get picture of biology
      parameters:
      - description: biology id
        in: query
        name: BiologyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_list:
    get:
      consumes:
      - application/json
      description: get all biologies of farmhouse
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_medical_record_list:
    get:
      consumes:
      - application/json
      description: get medical record list of biology
      parameters:
      - description: biology id
        in: query
        name: BiologyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_operation_record_list:
    get:
      consumes:
      - application/json
      description: get operation record list of biology
      parameters:
      - description: biology id
        in: query
        name: BiologyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_picture:
    get:
      consumes:
      - application/json
      description: get picture of biology
      parameters:
      - description: biology id
        in: query
        name: BiologyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_picture_path:
    get:
      consumes:
      - application/json
      description: get static picture path of biology
      parameters:
      - description: biology id
        in: query
        name: BiologyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_statistic:
    get:
      consumes:
      - application/json
      description: get biology statistic
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/get_with_device_list:
    get:
      consumes:
      - application/json
      description: get all biologies with devices of company
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/own_list:
    get:
      consumes:
      - application/json
      description: get own biology list
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/update_farmhouse:
    put:
      consumes:
      - application/json
      description: update biology farmhouse
      parameters:
      - description: name of operator
        in: formData
        name: Operator
        required: true
        type: string
      - description: telephone number of operator
        in: formData
        name: TelephoneNumber
        required: true
        type: string
      - description: biology id
        in: formData
        name: BiologyId
        required: true
        type: integer
      - description: farmhouse id
        in: formData
        name: FarmhouseId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /biology/update_picture:
    post:
      consumes:
      - application/json
      description: update biology picture
      parameters:
      - description: biology id
        in: formData
        name: BiologyId
        required: true
        type: integer
      - description: new picture
        in: formData
        name: BiologyPicture
        required: true
        type: file
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Biology
  /company/company_user/create:
    post:
      consumes:
      - multipart/form-data
      description: add company auth to user
      parameters:
      - description: company id
        in: formData
        name: CompanyId
        required: true
        type: string
      - description: user id
        in: formData
        name: UserId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Company
  /company/company_user/delete:
    delete:
      consumes:
      - application/json
      description: delete company auth of user
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: user id
        in: query
        name: UserId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Company
  /company/create:
    post:
      consumes:
      - multipart/form-data
      description: create company
      parameters:
      - description: company_name
        in: formData
        name: Name
        required: true
        type: string
      - description: parent id
        in: formData
        name: ParentId
        required: true
        type: integer
      - description: location
        in: formData
        name: Location
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Company
  /company/delete:
    delete:
      consumes:
      - application/json
      description: delete company
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Company
  /company/get/employeelist:
    get:
      consumes:
      - application/json
      description: get employee list of company
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Company
  /company/get/info:
    get:
      consumes:
      - application/json
      description: get company information
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Company
  /company/get/own_list:
    get:
      consumes:
      - application/json
      description: get own company list
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Company
  /company/get/treelist:
    get:
      consumes:
      - application/json
      description: get user's company tree
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Company
  /company/update:
    put:
      consumes:
      - application/json
      description: update company info
      parameters:
      - description: company_name
        in: query
        name: Name
        required: true
        type: string
      - description: location
        in: query
        name: Location
        required: true
        type: string
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Company
  /device/fixed/create:
    post:
      consumes:
      - multipart/form-data
      description: create fixed device
      parameters:
      - description: company id
        in: formData
        name: CompanyId
        required: true
        type: string
      - description: device id
        in: formData
        name: DeviceId
        required: true
        type: string
      - description: type name
        in: formData
        name: TypeId
        required: true
        type: string
      - description: install time
        in: formData
        name: InstallTime
        required: true
        type: string
      - description: bought time
        in: formData
        name: BoughtTime
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/create_type:
    post:
      consumes:
      - multipart/form-data
      description: create fixed device type
      parameters:
      - description: type name
        in: formData
        name: FixedDeviceTypeId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/delete:
    delete:
      consumes:
      - application/json
      description: delete fixed device
      parameters:
      - description: id
        in: query
        name: Id
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/delete_type:
    delete:
      consumes:
      - application/json
      description: delete fixed device type
      parameters:
      - description: type name
        in: query
        name: FixedDeviceTypeId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/get_auth_list:
    get:
      consumes:
      - application/json
      description: get user's auth fixed device list
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/get_by_farmhouse:
    get:
      consumes:
      - application/json
      description: get all fixed devices by farmhouse
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/get_fio_latest:
    get:
      consumes:
      - application/json
      description: get latest five-in-one device information
      parameters:
      - description: Id
        in: query
        name: Id
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/get_fio_list_by_time:
    get:
      consumes:
      - application/json
      description: get five-in-one information within time period
      parameters:
      - description: id
        in: query
        name: Id
        required: true
        type: string
      - description: start time
        in: query
        name: StartTime
        required: true
        type: string
      - description: end time
        in: query
        name: EndTime
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/get_monitor:
    get:
      consumes:
      - application/json
      description: get monitor streaming address
      parameters:
      - description: id
        in: query
        name: Id
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/get_statistic:
    get:
      consumes:
      - application/json
      description: get fixed device statistic
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/fixed/own_list:
    get:
      consumes:
      - application/json
      description: get own fixed device list
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-fixed
  /device/portable/create:
    post:
      consumes:
      - multipart/form-data
      description: create portable device
      parameters:
      - description: biology id
        in: formData
        name: BiologyId
        required: true
        type: string
      - description: device id
        in: formData
        name: DeviceId
        required: true
        type: string
      - description: type name
        in: formData
        name: TypeId
        required: true
        type: string
      - description: install time
        in: formData
        name: InstallTime
        required: true
        type: string
      - description: bought time
        in: formData
        name: BoughtTime
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /device/portable/create_type:
    post:
      consumes:
      - multipart/form-data
      description: create portable device type
      parameters:
      - description: type name
        in: formData
        name: PortableDeviceTypeId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /device/portable/delete:
    delete:
      consumes:
      - application/json
      description: delete portable device
      parameters:
      - description: id
        in: query
        name: Id
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /device/portable/delete_type:
    delete:
      consumes:
      - application/json
      description: delete portable device type
      parameters:
      - description: type name
        in: query
        name: PortableDeviceTypeId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /device/portable/get_by_biology:
    get:
      consumes:
      - application/json
      description: get biology portable device list
      parameters:
      - description: biology id
        in: query
        name: BiologyId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /device/portable/get_by_farmhouse:
    get:
      consumes:
      - application/json
      description: get all portable devices by farmhouse
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /device/portable/get_new_collar:
    get:
      consumes:
      - application/json
      description: get new-type collar realtime data by device id
      parameters:
      - description: id
        in: query
        name: Id
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /device/portable/get_position_collar_latest:
    get:
      consumes:
      - application/json
      description: get latest position collar information
      parameters:
      - description: Id
        in: query
        name: Id
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /device/portable/get_statistic:
    get:
      consumes:
      - application/json
      description: get portable device statistic
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /device/portable/own_list:
    get:
      consumes:
      - application/json
      description: get own portable device list
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Device-portable
  /monitorCenter/connect:
    get:
      consumes:
      - application/json
      description: connect with monitor center
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - MonitorCenter
  /monitorCenter/disconnect:
    delete:
      consumes:
      - application/json
      description: 'disconnect with monitor center : 从监控中心断开连接 参数列表：[] 访问携带token'
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - MonitorCenter
  /role/visitor/create:
    post:
      consumes:
      - multipart/form-data
      description: add company visitor auth to user
      parameters:
      - description: company id
        in: formData
        name: CompanyId
        required: true
        type: string
      - description: user id
        in: formData
        name: UserId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Role
  /role/visitor/delete:
    delete:
      consumes:
      - application/json
      description: delete company visitor auth of user
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: user id
        in: query
        name: UserId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Role
  /role/visitor/get_company_list:
    get:
      consumes:
      - application/json
      description: get user's visitor company list
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Role
  /role/visitor/get_list:
    get:
      consumes:
      - application/json
      description: get visitor list of company
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Role
  /rule/create:
    post:
      consumes:
      - multipart/form-data
      description: create a rule
      parameters:
      - description: datasource
        in: formData
        name: Datasource
        required: true
        type: string
      - description: condition
        in: formData
        name: Condition
        required: true
        type: string
      - description: action
        in: formData
        name: Action
        required: true
        type: string
      - description: company id
        in: formData
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Rule
  /rule/delete:
    delete:
      consumes:
      - application/json
      description: delete an inactive rule
      parameters:
      - description: rule id
        in: query
        name: RuleId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Rule
  /rule/end:
    get:
      consumes:
      - application/json
      description: end a rule
      parameters:
      - description: rule id
        in: query
        name: RuleId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Rule
  /rule/get_company:
    get:
      consumes:
      - application/json
      description: get rule list by company id
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Rule
  /rule/get_user:
    get:
      consumes:
      - application/json
      description: get rule list by user id
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Rule
  /rule/schedule:
    get:
      consumes:
      - application/json
      description: schedule a rule
      parameters:
      - description: rule id
        in: query
        name: RuleId
        required: true
        type: integer
      - description: exec internal
        in: query
        name: ExecInternal
        required: true
        type: string
      - description: future start time
        in: query
        name: FutureTime
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Rule
  /rule/start:
    get:
      consumes:
      - application/json
      description: start a rule
      parameters:
      - description: rule id
        in: query
        name: RuleId
        required: true
        type: integer
      - description: exec internal
        in: query
        name: ExecInternal
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Rule
  /rule/update:
    put:
      consumes:
      - application/json
      description: update an inactive rule
      parameters:
      - description: datasource
        in: query
        name: Datasource
        required: true
        type: string
      - description: condition
        in: query
        name: Condition
        required: true
        type: string
      - description: action
        in: query
        name: Action
        required: true
        type: string
      - description: rule id
        in: query
        name: RuleId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - Rule
  /user/info:
    get:
      consumes:
      - application/json
      description: get user information
      parameters:
      - description: Id
        in: query
        name: Id
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - User
  /user/login:
    post:
      consumes:
      - multipart/form-data
      description: user login
      parameters:
      - description: username
        in: formData
        name: Name
        required: true
        type: string
      - description: password
        in: formData
        name: Password
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - User
  /user/register:
    post:
      consumes:
      - multipart/form-data
      description: user register
      parameters:
      - description: username
        in: formData
        name: Name
        required: true
        type: string
      - description: password
        in: formData
        name: Password
        required: true
        type: string
      - description: telephone
        in: formData
        name: Telephone
        required: true
        type: string
      - description: email
        in: formData
        name: Email
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - User
  /user/update:
    put:
      consumes:
      - application/json
      description: update user information
      parameters:
      - description: username
        in: query
        name: Name
        required: true
        type: string
      - description: password
        in: query
        name: Password
        required: true
        type: string
      - description: telephone
        in: query
        name: Telephone
        required: true
        type: string
      - description: email
        in: query
        name: Email
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - User
  /user/update_default_company:
    put:
      consumes:
      - application/json
      description: update user default company
      parameters:
      - description: company id
        in: query
        name: CompanyId
        required: true
        type: integer
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/server.SuccessResponse200'
      summary: API of golang gin backend
      tags:
      - User
swagger: "2.0"
