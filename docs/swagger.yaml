basePath: /
definitions:
  swagResponse.FailureResponse400:
    properties:
      code:
        example: 400
        type: integer
      data:
        example: "null"
        type: string
      msg:
        example: 错误请求
        type: string
    type: object
  swagResponse.FailureResponse401:
    properties:
      code:
        example: 401
        type: integer
      data:
        example: "null"
        type: string
      msg:
        example: 权限不足
        type: string
    type: object
  swagResponse.FailureResponse422:
    properties:
      code:
        example: 422
        type: integer
      data:
        example: "null"
        type: string
      msg:
        example: 语义错误
        type: string
    type: object
  swagResponse.FailureResponse500:
    properties:
      code:
        example: 500
        type: integer
      data:
        example: "null"
        type: string
      msg:
        example: 服务器内部错误
        type: string
    type: object
  swagResponse.SuccessResponse200:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      msg:
        example: 操作成功
        type: string
    type: object
host: localhost:8081
info:
  contact:
    email: 972576519@qq.com
    name: aken
    url: https://github.com/ChenKen9869
  description: golang-backend interface
  license:
    name: license(Mandatory)
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Intelligent Pasture Backend APIs
  version: version(1.0)
paths:
  /user/info:
    get:
      consumes:
      - application/json
      description: get user informations
      parameters:
      - description: username
        in: query
        name: name
        required: true
        type: string
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: 查询成功
          schema:
            $ref: '#/definitions/swagResponse.SuccessResponse200'
        "400":
          description: 用户信息不存在
          schema:
            $ref: '#/definitions/swagResponse.FailureResponse400'
        "401":
          description: 权限不足
          schema:
            $ref: '#/definitions/swagResponse.FailureResponse401'
      summary: API of golang gin backend
      tags:
      - User
  /user/login:
    post:
      consumes:
      - application/json
      description: user login
      parameters:
      - description: userinfo
        in: body
        name: user
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/swagResponse.SuccessResponse200'
        "422":
          description: 输入参数错误
          schema:
            $ref: '#/definitions/swagResponse.FailureResponse422'
        "500":
          description: 系统异常
          schema:
            $ref: '#/definitions/swagResponse.FailureResponse500'
      summary: API of golang gin backend
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: user register
      parameters:
      - description: userinfo
        in: body
        name: user
        required: true
        schema:
          type: string
      responses:
        "200":
          description: 注册成功
          schema:
            $ref: '#/definitions/swagResponse.SuccessResponse200'
        "422":
          description: 输入参数错误
          schema:
            $ref: '#/definitions/swagResponse.FailureResponse422'
        "500":
          description: 系统异常
          schema:
            $ref: '#/definitions/swagResponse.FailureResponse500'
      summary: API of golang gin backend
      tags:
      - User
swagger: "2.0"
