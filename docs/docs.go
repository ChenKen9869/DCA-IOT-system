// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "aken",
            "url": "https://github.com/ChenKen9869",
            "email": "972576519@qq.com"
        },
        "license": {
            "name": "license(Mandatory)",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/biology/create": {
            "post": {
                "description": "create biology",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "biology name",
                        "name": "BiologyName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "biology type",
                        "name": "BiologyType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "company id(farmhouse id)",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "biology birthday",
                        "name": "Birthday",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "biology gender",
                        "name": "Gender",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/create_epidemic_prevention_record": {
            "post": {
                "description": "create biology epidemic prevention record",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vaccine description",
                        "name": "VaccineDescription",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "inoculation time",
                        "name": "InoculationTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/create_medical_record": {
            "post": {
                "description": "create biology medical record",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "disease",
                        "name": "Disease",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "illness time",
                        "name": "IllnessTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "treatment plan",
                        "name": "TreatmentPlan",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/create_operation_record": {
            "post": {
                "description": "create biology operation record",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "doctor",
                        "name": "Doctor",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "operation time",
                        "name": "OperationTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "process description",
                        "name": "ProcessDescription",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "result",
                        "name": "Result",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/create_type": {
            "post": {
                "description": "create biology type",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "BiologyTypeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/delete": {
            "delete": {
                "description": "delete biology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of operator",
                        "name": "Operator",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telephone number of operator",
                        "name": "TelephoneNumber",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "leave place",
                        "name": "LeavePlace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/delete_type": {
            "delete": {
                "description": "delete biology type",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "BiologyTypeId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_auth_list": {
            "get": {
                "description": "get user's auth biology list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_epidemic_prevention_record_list": {
            "get": {
                "description": "get epidemic prevention record list of biology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_gender_statistic": {
            "get": {
                "description": "get biology gender statistic",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_info": {
            "get": {
                "description": "get picture of biology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_list": {
            "get": {
                "description": "get all biologies of farmhouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_medical_record_list": {
            "get": {
                "description": "get medical record list of biology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_operation_record_list": {
            "get": {
                "description": "get operation record list of biology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_picture": {
            "get": {
                "description": "get picture of biology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_picture_path": {
            "get": {
                "description": "get static picture path of biology",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_statistic": {
            "get": {
                "description": "get biology statistic",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_with_device_list": {
            "get": {
                "description": "get all biologies with devices of company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/own_list": {
            "get": {
                "description": "get own biology list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/update_farmhouse": {
            "put": {
                "description": "update biology farmhouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of operator",
                        "name": "Operator",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telephone number of operator",
                        "name": "TelephoneNumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "farmhouse id",
                        "name": "FarmhouseId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/update_picture": {
            "post": {
                "description": "update biology picture",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "new picture",
                        "name": "BiologyPicture",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/company_user/create": {
            "post": {
                "description": "add company auth to user",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "UserId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/company_user/delete": {
            "delete": {
                "description": "delete company auth of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "UserId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/create": {
            "post": {
                "description": "create company",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company_name",
                        "name": "Name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "parent id",
                        "name": "ParentId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location",
                        "name": "Location",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/delete": {
            "delete": {
                "description": "delete company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/get/employeelist": {
            "get": {
                "description": "get employee list of company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/get/info": {
            "get": {
                "description": "get company information",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/get/own_list": {
            "get": {
                "description": "get own company list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/get/treelist": {
            "get": {
                "description": "get user's company tree",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/update": {
            "put": {
                "description": "update company info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company_name",
                        "name": "Name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location",
                        "name": "Location",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/create": {
            "post": {
                "description": "create fixed device",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "DeviceId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "TypeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "install time",
                        "name": "InstallTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bought time",
                        "name": "BoughtTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/create_type": {
            "post": {
                "description": "create fixed device type",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "FixedDeviceTypeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/delete": {
            "delete": {
                "description": "delete fixed device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/delete_type": {
            "delete": {
                "description": "delete fixed device type",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "type name",
                        "name": "FixedDeviceTypeId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_auth_list": {
            "get": {
                "description": "get user's auth fixed device list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_by_farmhouse": {
            "get": {
                "description": "get all fixed devices by farmhouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_fio_latest": {
            "get": {
                "description": "get latest five-in-one device information",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_fio_list_by_time": {
            "get": {
                "description": "get five-in-one information within time period",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "start time",
                        "name": "StartTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "end time",
                        "name": "EndTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_monitor": {
            "get": {
                "description": "get monitor streaming address",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_statistic": {
            "get": {
                "description": "get fixed device statistic",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/own_list": {
            "get": {
                "description": "get own fixed device list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/create": {
            "post": {
                "description": "create portable device",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "DeviceId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "TypeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "install time",
                        "name": "InstallTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bought time",
                        "name": "BoughtTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/create_type": {
            "post": {
                "description": "create portable device type",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "PortableDeviceTypeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/delete": {
            "delete": {
                "description": "delete portable device",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/delete_type": {
            "delete": {
                "description": "delete portable device type",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "type name",
                        "name": "PortableDeviceTypeId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_by_biology": {
            "get": {
                "description": "get biology portable device list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_by_farmhouse": {
            "get": {
                "description": "get all portable devices by farmhouse",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_new_collar": {
            "get": {
                "description": "get new-type collar realtime data by device id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_position_collar_latest": {
            "get": {
                "description": "get latest position collar information",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_statistic": {
            "get": {
                "description": "get portable device statistic",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/own_list": {
            "get": {
                "description": "get own portable device list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/monitorCenter/connect": {
            "get": {
                "description": "connect with monitor center",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MonitorCenter"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/monitorCenter/disconnect": {
            "delete": {
                "description": "disconnect with monitor center : 从监控中心断开连接 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MonitorCenter"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/role/visitor/create": {
            "post": {
                "description": "add company visitor auth to user",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "UserId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/role/visitor/delete": {
            "delete": {
                "description": "delete company visitor auth of user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "UserId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/role/visitor/get_company_list": {
            "get": {
                "description": "get user's visitor company list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/role/visitor/get_list": {
            "get": {
                "description": "get visitor list of company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/create": {
            "post": {
                "description": "create a rule",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "datasource",
                        "name": "Datasource",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "condition",
                        "name": "Condition",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "action",
                        "name": "Action",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/delete": {
            "delete": {
                "description": "delete an inactive rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/end": {
            "get": {
                "description": "end a rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/get_company": {
            "get": {
                "description": "get rule list by company id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/get_user": {
            "get": {
                "description": "get rule list by user id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/schedule": {
            "get": {
                "description": "schedule a rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "exec internal",
                        "name": "ExecInternal",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "future start time",
                        "name": "FutureTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/start": {
            "get": {
                "description": "start a rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "exec internal",
                        "name": "ExecInternal",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/update": {
            "put": {
                "description": "update an inactive rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "datasource",
                        "name": "Datasource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "condition",
                        "name": "Condition",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "action",
                        "name": "Action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "description": "get user information",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "user login",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "Name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "Password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "user register",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "Name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "Password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telephone",
                        "name": "Telephone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "Email",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "put": {
                "description": "update user information",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "Name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "Password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telephone",
                        "name": "Telephone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "Email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/user/update_default_company": {
            "put": {
                "description": "update user default company",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.SuccessResponse200": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "msg": {
                    "type": "string",
                    "example": "success"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "version(1.0)",
	Host:             "localhost:5930",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Intelligent Pasture Backend APIs",
	Description:      "golang-backend interface",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
