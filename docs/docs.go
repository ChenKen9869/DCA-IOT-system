// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "aken",
            "url": "https://github.com/ChenKen9869",
            "email": "972576519@qq.com"
        },
        "license": {
            "name": "license(Mandatory)",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/biology/create": {
            "post": {
                "description": "create biology : 创建一个生物 参数列表：[生物名称、生物类别、该生物所在的牧舍ID、出生日期、性别] 访问携带token",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "biology name",
                        "name": "BiologyName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "biology type",
                        "name": "BiologyType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "company id(farmhouse id)",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "biology birthday",
                        "name": "Birthday",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "biology gender",
                        "name": "Gender",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/create_epidemic_prevention_record": {
            "post": {
                "description": "create biology epidemic prevention record : 新增生物的防疫记录 参数列表：[生物ID、本次使用的疫苗信息记录（疫苗描述信息）、注射时间] 访问携带token",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vaccine description",
                        "name": "VaccineDescription",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "inoculation time",
                        "name": "InoculationTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/create_medical_record": {
            "post": {
                "description": "create biology medical record : 新增生物的用药记录（新增病历） 参数列表：[生物ID、疾病描述、患病时间、治疗方案] 访问携带token",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "disease",
                        "name": "Disease",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "illness time",
                        "name": "IllnessTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "treatment plan",
                        "name": "TreatmentPlan",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/create_operation_record": {
            "post": {
                "description": "create biology operation record : 新增生物的手术记录 参数列表：[生物ID、手术医生、手术时间、过程记录、手术结果] 访问携带token",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "doctor",
                        "name": "Doctor",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "operation time",
                        "name": "OperationTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "process description",
                        "name": "ProcessDescription",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "result",
                        "name": "Result",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/create_type": {
            "post": {
                "description": "create biology type : 创建生物类型 参数列表：[生物类型名称]",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "BiologyTypeId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/delete": {
            "delete": {
                "description": "delete biology : 删除一个生物 参数列表：[本次删除的操作人员姓名，操作人员的联系方式，生物的去处（病死，屠宰场。卖出 等），生物ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of operator",
                        "name": "Operator",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telephone number of operator",
                        "name": "TelephoneNumber",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "leave place",
                        "name": "LeavePlace",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/delete_type": {
            "delete": {
                "description": "delete biology type : 删除生物类型 参数列表：[生物类型名称] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "BiologyTypeId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_auth_list": {
            "get": {
                "description": "get user's auth biology list : 获取当前用户有权限的所有生物信息 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_epidemic_prevention_record_list": {
            "get": {
                "description": "get epidemic prevention record list of biology : 获取生物的防疫信息记录列表 参数列表：[生物ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_gender_statistic": {
            "get": {
                "description": "get biology gender statistic : 获取指定牧场中的生物性别统计信息 参数列表：[牧场Id] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_info": {
            "get": {
                "description": "get picture of biology : 获取生物的详细信息 参数列表：[生物ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_list": {
            "get": {
                "description": "get all biologies of farmhouse : 通过牧舍ID获取其中的所有生物组成的列表 参数列表：[牧舍ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_medical_record_list": {
            "get": {
                "description": "get medical record list of biology : 获取生物的病历列表 参数列表：[生物ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_operation_record_list": {
            "get": {
                "description": "get operation record list of biology : 获取生物的手术记录列表 参数列表：[生物ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_picture": {
            "get": {
                "description": "get picture of biology : 获取生物的照片（获取生物照片的 bytes 形式）参数列表：[生物ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_picture_path": {
            "get": {
                "description": "get static picture path of biology : 获取生物的照片（获取生物照片在服务器中的静态资源地址） 参数列表：[生物ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_statistic": {
            "get": {
                "description": "get biology statistic : 获取指定牧场中的生物统计信息 参数列表：[牧场Id] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/get_with_device_list": {
            "get": {
                "description": "get all biologies with devices of company : 根据农牧场ID获取其中所有携带有便携式设备的生物所组成的列表（包括每个生物对应的设备信息） 参数列表：[农牧场ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/own_list": {
            "get": {
                "description": "get own biology list : 获取当前用户拥有的所有生物信息 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/update_farmhouse": {
            "put": {
                "description": "update biology farmhouse : 更新生物所属的牧舍（转舍） 参数列表：[本次转舍的操作人员姓名、操作人员联系方式、生物ID、生物的目的牧舍ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of operator",
                        "name": "Operator",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telephone number of operator",
                        "name": "TelephoneNumber",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "farmhouse id",
                        "name": "FarmhouseId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/biology/update_picture": {
            "post": {
                "description": "update biology picture : 上传（更新）生物的照片 参数列表：[生物ID、照片文件] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Biology"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "new picture",
                        "name": "BiologyPicture",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/company_user/create": {
            "post": {
                "description": "add company auth to user : 为指定用户分配指定公司的权限（接口访问者需要事先拥有该公司的权限） 参数列表：[公司ID、用户ID] 访问携带token",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "UserId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/company_user/delete": {
            "delete": {
                "description": "delete company auth of user : 从指定用户处收回指定公司的权限 参数列表：[公司ID、用户ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "UserId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/create": {
            "post": {
                "description": "create company : 创建一个公司 参数列表：[公司名称、该公司的父公司ID（root公司的父公司ID填写0）、该公司的地理位置信息描述（前端自己决定格式，具体看第三方天气定位等服务的接口要求，后端只负责保存地理信息，不做其他处理）] 访问携带token",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company_name",
                        "name": "Name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "parent id",
                        "name": "ParentId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location",
                        "name": "Location",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/delete": {
            "delete": {
                "description": "delete company : 删除一个公司 参数列表：[公司ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/get/employeelist": {
            "get": {
                "description": "get employee list of company : 获取公司的员工列表 参数列表：[公司ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/get/info": {
            "get": {
                "description": "get company information : 获取公司的详细信息 参数列表：[公司ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/get/own_list": {
            "get": {
                "description": "get own company list : 获取当前用户拥有的公司列表 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/get/treelist": {
            "get": {
                "description": "get user's company tree : 获取当前用户有权限的所有公司信息（以树形结构返回） 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/company/update": {
            "put": {
                "description": "update company info : 更新公司信息 参数列表：[公司ID，新名字，新地址] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company_name",
                        "name": "Name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location",
                        "name": "Location",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/create": {
            "post": {
                "description": "create fixed device  : 创建固定式设备 参数列表：[设备所在的牧舍ID、厂家提供的设备编号、设备类型] 访问携带token",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "DeviceId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "TypeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "install time",
                        "name": "InstallTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bought time",
                        "name": "BoughtTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/create_type": {
            "post": {
                "description": "create fixed device type : 新增固定式设备类型 参数列表：[设备类型]",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "FixedDeviceTypeId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/delete": {
            "delete": {
                "description": "delete fixed device : 删除固定式设备 参数列表：[设备ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/delete_type": {
            "delete": {
                "description": "delete fixed device type : 删除固定式设备类型 参数列表：[设备类型ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "type name",
                        "name": "FixedDeviceTypeId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_auth_list": {
            "get": {
                "description": "get user's auth fixed device list : 获取当前用户有权限的所有固定式设备信息 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_by_farmhouse": {
            "get": {
                "description": "get all fixed devices by farmhouse : 获取一个牧舍下的所有固定式设备 参数列表：[牧舍ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_fio_latest": {
            "get": {
                "description": "get latest five-in-one device information : 获取五合一传感器的最新数据 参数列表：[五合一传感器的设备ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_fio_list_by_time": {
            "get": {
                "description": "get five-in-one information within time period : 以时间段作为参数获取五合一传感器的数据列表 参数列表：[五合一传感器的设备ID、开始时间、结束时间] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "start time",
                        "name": "StartTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "end time",
                        "name": "EndTime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_monitor": {
            "get": {
                "description": "get monitor streaming address : 获取摄像头的直播地址 参数列表：[摄像头设备ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/get_statistic": {
            "get": {
                "description": "get fixed device statistic : 获取指定牧场中的固定设备统计信息 参数列表：[牧场Id] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/fixed/own_list": {
            "get": {
                "description": "get own fixed device list : 获取当前用户拥有的所有固定式设备信息 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-fixed"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/create": {
            "post": {
                "description": "create portable device : 创建便携式设备 参数列表：[设备绑定的生物ID、厂家提供的设备编号、设备类型] 访问携带token",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "device id",
                        "name": "DeviceId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "TypeId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "install time",
                        "name": "InstallTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bought time",
                        "name": "BoughtTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/create_type": {
            "post": {
                "description": "create portable device type : 新增便携式设备类型 参数列表：[设备类型]",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type name",
                        "name": "PortableDeviceTypeId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/delete": {
            "delete": {
                "description": "delete portable device : 删除便携式设备 参数列表：[设备ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/delete_type": {
            "delete": {
                "description": "delete portable device type : 删除便携式设备类型 参数列表：[设备类型ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "type name",
                        "name": "PortableDeviceTypeId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_by_biology": {
            "get": {
                "description": "get biology portable device list : 获取指定生物绑定的所有便携式设备信息 参数列表：[生物id] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "biology id",
                        "name": "BiologyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_by_farmhouse": {
            "get": {
                "description": "get all portable devices by farmhouse : 获取一个牧舍下的所有便携式设备 参数列表：[牧舍ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_new_collar": {
            "get": {
                "description": "get new-type collar realtime data by device id : 获取中农智联项圈的最新数据 参数列表：[设备ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_position_collar_latest": {
            "get": {
                "description": "get latest position collar information : 获取定位项圈的最新数据 参数列表：[定位项圈的设备ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/get_statistic": {
            "get": {
                "description": "get portable device statistic : 获取指定牧场中的便携设备统计信息 参数列表：[牧场Id] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/device/portable/own_list": {
            "get": {
                "description": "get own portable device list : 获取当前用户拥有的所有便携式设备信息 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Device-portable"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/monitorCentor/connect": {
            "get": {
                "description": "connect with monitor centor : 连接到监控中心以接受推送 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MonitorCentor"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/monitorCentor/disconnect": {
            "delete": {
                "description": "disconnect with monitor centor : 从监控中心断开连接 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "MonitorCentor"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/role/visitor/create": {
            "post": {
                "description": "add company visitor auth to user : 给指定用户赋予指定公司的访客权限 参数列表：[公司ID、用户ID] 访问携带token",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "UserId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/role/visitor/delete": {
            "delete": {
                "description": "delete company visitor auth of user : 指定用户的访客权限 参数列表：[公司ID、用户ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "UserId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/role/visitor/get_company_list": {
            "get": {
                "description": "get user's visitor company list : 获取当前用户具有访客权限的所有公司 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/role/visitor/get_list": {
            "get": {
                "description": "get visitor list of company : 获取公司的所有访客 参数列表：[公司ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Role"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/create": {
            "post": {
                "description": "create a rule",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "datasource",
                        "name": "Datasource",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "condition",
                        "name": "Condition",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "action",
                        "name": "Action",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/delete": {
            "delete": {
                "description": "delete an inactive rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/end": {
            "get": {
                "description": "end a rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/get_company": {
            "get": {
                "description": "get rule list by company id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/get_user": {
            "get": {
                "description": "get rule list by user id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/schedule": {
            "get": {
                "description": "schedule a rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "exec internal",
                        "name": "ExecInternal",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "future start time",
                        "name": "FutureTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/start": {
            "get": {
                "description": "start a rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "exec internal",
                        "name": "ExecInternal",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/rule/update": {
            "put": {
                "description": "update an inactive rule",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Rule"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "datasource",
                        "name": "Datasource",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "condition",
                        "name": "Condition",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "action",
                        "name": "Action",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "rule id",
                        "name": "RuleId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "description": "get user information : 获取当前用户的详细信息 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "Id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "查询成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    },
                    "400": {
                        "description": "用户信息不存在",
                        "schema": {
                            "$ref": "#/definitions/server.FailureResponse400"
                        }
                    },
                    "401": {
                        "description": "权限不足",
                        "schema": {
                            "$ref": "#/definitions/server.FailureResponse401"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "user login : 用户登录 参数列表：[用户名、密码]",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "Name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "Password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登录成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    },
                    "422": {
                        "description": "输入参数错误",
                        "schema": {
                            "$ref": "#/definitions/server.FailureResponse422"
                        }
                    },
                    "500": {
                        "description": "系统异常",
                        "schema": {
                            "$ref": "#/definitions/server.FailureResponse500"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "user register : 用户注册 参数列表：[用户名、密码、电话号码、邮箱地址]",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "Name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "Password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telephone",
                        "name": "Telephone",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "Email",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "注册成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    },
                    "422": {
                        "description": "输入参数错误",
                        "schema": {
                            "$ref": "#/definitions/server.FailureResponse422"
                        }
                    },
                    "500": {
                        "description": "系统异常",
                        "schema": {
                            "$ref": "#/definitions/server.FailureResponse500"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "put": {
                "description": "update user information : 更新当前用户的详细信息 参数列表：[] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "Name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "Password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "telephone",
                        "name": "Telephone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "Email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    },
                    "401": {
                        "description": "权限不足",
                        "schema": {
                            "$ref": "#/definitions/server.FailureResponse401"
                        }
                    }
                }
            }
        },
        "/user/update_default_company": {
            "put": {
                "description": "update user default company : 更新当前用户的首页默认显示企业 参数列表：[公司ID] 访问携带token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "API of golang gin backend",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "company id",
                        "name": "CompanyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新成功",
                        "schema": {
                            "$ref": "#/definitions/server.SuccessResponse200"
                        }
                    },
                    "401": {
                        "description": "权限不足",
                        "schema": {
                            "$ref": "#/definitions/server.FailureResponse401"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "server.FailureResponse400": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "data": {
                    "type": "string",
                    "example": "null"
                },
                "msg": {
                    "type": "string",
                    "example": "语法无效"
                }
            }
        },
        "server.FailureResponse401": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "data": {
                    "type": "string",
                    "example": "null"
                },
                "msg": {
                    "type": "string",
                    "example": "权限不足"
                }
            }
        },
        "server.FailureResponse422": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 422
                },
                "data": {
                    "type": "string",
                    "example": "null"
                },
                "msg": {
                    "type": "string",
                    "example": "无法处理"
                }
            }
        },
        "server.FailureResponse500": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "data": {
                    "type": "string",
                    "example": "null"
                },
                "msg": {
                    "type": "string",
                    "example": "服务器内部错误"
                }
            }
        },
        "server.SuccessResponse200": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "msg": {
                    "type": "string",
                    "example": "操作成功"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "version(1.0)",
	Host:             "localhost:5930",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Intelligent Pasture Backend APIs",
	Description:      "golang-backend interface",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
